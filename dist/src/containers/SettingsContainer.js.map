{"version":3,"sources":["webpack:///src/containers/SettingsContainer.js","webpack:///./src/widgets/Settings.ts","webpack:///./src/containers/SettingsContainer.ts","webpack:///./src/processes/settingsProcesses.ts"],"names":["dojoWebpackJsonp_dojo2_realworld","108","module","exports","__webpack_require__","Object","defineProperty","value","tslib_1","WidgetBase_1","d_1","Settings","_super","apply","this","arguments","__extends","prototype","_onSubmit","event","preventDefault","properties","onUpdateSettings","_onImageUrlInput","onImageUrlInput","target","_onUsernameInput","onUsernameInput","_onBioInput","onBioInput","_onEmailInput","onEmailInput","_onPasswordInput","onPasswordInput","onAttach","getUserSettings","render","_a","email","password","bio","imageUrl","username","logout","v","classes","type","placeholder","oninput","rows","onclick","WidgetBase","93","getProperties","store","get","path","settingsProcesses_1","emailInput","passwordInput","usernameInput","bioInput","imageUrlInput","updateUserSettings","loginProcesses_1","Container_1","Settings_1","SettingsContainer","Container","98","_this","process_1","operations_1","utils_1","commandFactory","createCommandFactory","emailInputCommand","_b","__read","payload","replace","passwordInputCommand","usernameInputCommand","bioInputCommand","imageUrlInputCommand","startUserSettingsCommand","loaded","loading","getUserSettingsCommand","__awaiter","__generator","updateUserSettingsCommand","token","requestPayload","response","json","label","image","fetch","method","headers","getHeaders","body","JSON","stringify","sent","user","id","createProcess"],"mappings":"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","file":"src/containers/SettingsContainer.js","sourcesContent":["/*!\n * [Dojo](https://dojo.io/)\n * Copyright [JS Foundation](https://js.foundation/) & contributors\n * [New BSD license](https://github.com/dojo/meta/blob/master/LICENSE)\n * All rights reserved\n * \n */\ndojoWebpackJsonp_dojo2_realworld([4],{\n\n/***/ 108:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(0);\nvar WidgetBase_1 = __webpack_require__(3);\nvar d_1 = __webpack_require__(2);\nvar Settings = /** @class */ (function (_super) {\n    tslib_1.__extends(Settings, _super);\n    function Settings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Settings.prototype._onSubmit = function (event) {\n        event.preventDefault();\n        this.properties.onUpdateSettings();\n    };\n    Settings.prototype._onImageUrlInput = function (event) {\n        this.properties.onImageUrlInput(event.target.value);\n    };\n    Settings.prototype._onUsernameInput = function (event) {\n        this.properties.onUsernameInput(event.target.value);\n    };\n    Settings.prototype._onBioInput = function (event) {\n        this.properties.onBioInput(event.target.value);\n    };\n    Settings.prototype._onEmailInput = function (event) {\n        this.properties.onEmailInput(event.target.value);\n    };\n    Settings.prototype._onPasswordInput = function (event) {\n        this.properties.onPasswordInput(event.target.value);\n    };\n    Settings.prototype.onAttach = function () {\n        this.properties.getUserSettings();\n    };\n    Settings.prototype.render = function () {\n        var _a = this.properties, email = _a.email, password = _a.password, bio = _a.bio, imageUrl = _a.imageUrl, username = _a.username, logout = _a.logout;\n        return d_1.v('div', { classes: 'settings-page' }, [\n            d_1.v('div', { classes: ['container', 'page'] }, [\n                d_1.v('div', { classes: 'row' }, [\n                    d_1.v('div', { classes: ['col-md-6', 'offset-md-3', 'col-xs-12'] }, [\n                        d_1.v('h1', { classes: 'text-xs-center' }, ['Your Settings']),\n                        d_1.v('form', [\n                            d_1.v('fieldset', [\n                                d_1.v('fieldset', { classes: 'form-group' }, [\n                                    d_1.v('input', {\n                                        value: imageUrl,\n                                        classes: 'form-control',\n                                        type: 'text',\n                                        placeholder: 'URL of profile picture',\n                                        oninput: this._onImageUrlInput\n                                    })\n                                ]),\n                                d_1.v('fieldset', { classes: 'form-group' }, [\n                                    d_1.v('input', {\n                                        value: username,\n                                        classes: ['form-control', 'form-control-lg'],\n                                        type: 'text',\n                                        placeholder: 'Your Name',\n                                        oninput: this._onUsernameInput\n                                    })\n                                ]),\n                                d_1.v('fieldset', { classes: 'form-group' }, [\n                                    d_1.v('textarea', {\n                                        value: bio,\n                                        classes: ['form-control', 'form-control-lg'],\n                                        rows: 8,\n                                        placeholder: 'Short bio about you',\n                                        oninput: this._onBioInput\n                                    })\n                                ]),\n                                d_1.v('fieldset', { classes: 'form-group' }, [\n                                    d_1.v('input', {\n                                        value: email,\n                                        classes: ['form-control', 'form-control-lg'],\n                                        type: 'email',\n                                        placeholder: 'Email',\n                                        oninput: this._onEmailInput\n                                    })\n                                ]),\n                                d_1.v('fieldset', { classes: 'form-group' }, [\n                                    d_1.v('input', {\n                                        value: password,\n                                        classes: ['form-control', 'form-control-lg'],\n                                        type: 'password',\n                                        placeholder: 'Password',\n                                        oninput: this._onPasswordInput\n                                    })\n                                ]),\n                                d_1.v('button', {\n                                    onclick: this._onSubmit,\n                                    type: 'submit',\n                                    classes: ['btn', 'btn-lg', 'btn-primary', 'pull-xs-right']\n                                }, ['Update Settings'])\n                            ])\n                        ]),\n                        d_1.v('hr'),\n                        d_1.v('button', { onclick: logout, classes: ['btn', 'btn-outline-danger'] }, [\n                            'Or click here to logout'\n                        ])\n                    ])\n                ])\n            ])\n        ]);\n    };\n    return Settings;\n}(WidgetBase_1.WidgetBase));\nexports.Settings = Settings;\n\n\n/***/ }),\n\n/***/ 93:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Container_1 = __webpack_require__(18);\nvar Settings_1 = __webpack_require__(108);\nvar settingsProcesses_1 = __webpack_require__(98);\nvar loginProcesses_1 = __webpack_require__(39);\nfunction getProperties(store, properties) {\n    var get = store.get, path = store.path;\n    return {\n        email: get(path('settings', 'email')),\n        password: get(path('settings', 'password')),\n        username: get(path('settings', 'username')),\n        imageUrl: get(path('settings', 'imageUrl')),\n        bio: get(path('settings', 'bio')),\n        onEmailInput: settingsProcesses_1.emailInput(store),\n        onPasswordInput: settingsProcesses_1.passwordInput(store),\n        onUsernameInput: settingsProcesses_1.usernameInput(store),\n        onBioInput: settingsProcesses_1.bioInput(store),\n        onImageUrlInput: settingsProcesses_1.imageUrlInput(store),\n        onUpdateSettings: settingsProcesses_1.updateUserSettings(store),\n        getUserSettings: settingsProcesses_1.getUserSettings(store),\n        logout: loginProcesses_1.logout(store)\n    };\n}\nexports.SettingsContainer = Container_1.Container(Settings_1.Settings, 'state', { getProperties: getProperties });\n\n\n/***/ }),\n\n/***/ 98:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar _this = this;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(0);\nvar process_1 = __webpack_require__(11);\nvar operations_1 = __webpack_require__(12);\nvar utils_1 = __webpack_require__(40);\nvar commandFactory = process_1.createCommandFactory();\nvar emailInputCommand = commandFactory(function (_a) {\n    var _b = tslib_1.__read(_a.payload, 1), username = _b[0], path = _a.path;\n    return [operations_1.replace(path('settings', 'email'), username)];\n});\nvar passwordInputCommand = commandFactory(function (_a) {\n    var _b = tslib_1.__read(_a.payload, 1), password = _b[0], path = _a.path;\n    return [operations_1.replace(path('settings', 'password'), password)];\n});\nvar usernameInputCommand = commandFactory(function (_a) {\n    var _b = tslib_1.__read(_a.payload, 1), username = _b[0], path = _a.path;\n    return [operations_1.replace(path('settings', 'username'), username)];\n});\nvar bioInputCommand = commandFactory(function (_a) {\n    var _b = tslib_1.__read(_a.payload, 1), bio = _b[0], path = _a.path;\n    return [operations_1.replace(path('settings', 'bio'), bio)];\n});\nvar imageUrlInputCommand = commandFactory(function (_a) {\n    var _b = tslib_1.__read(_a.payload, 1), imageUrl = _b[0], path = _a.path;\n    return [operations_1.replace(path('settings', 'image'), imageUrl)];\n});\nvar startUserSettingsCommand = commandFactory(function (_a) {\n    var path = _a.path, get = _a.get;\n    return [operations_1.replace(path('settings'), { loaded: false, loading: true })];\n});\nvar getUserSettingsCommand = commandFactory(function (_a) {\n    var path = _a.path, get = _a.get;\n    return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        return tslib_1.__generator(this, function (_b) {\n            return [2 /*return*/, [operations_1.replace(path('settings'), get(path('user')))]];\n        });\n    });\n});\nvar updateUserSettingsCommand = commandFactory(function (_a) {\n    var path = _a.path, get = _a.get;\n    return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        var token, requestPayload, password, response, json;\n        return tslib_1.__generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    token = get(path('user', 'token'));\n                    requestPayload = {\n                        image: get(path('settings', 'image')),\n                        bio: get(path('settings', 'bio')),\n                        username: get(path('settings', 'username')),\n                        email: get(path('settings', 'email'))\n                    };\n                    password = get(path('settings', 'password'));\n                    if (password) {\n                        requestPayload.password = password;\n                    }\n                    return [4 /*yield*/, fetch(\"https://conduit.productionready.io/api/user\", {\n                            method: 'put',\n                            headers: utils_1.getHeaders(token),\n                            body: JSON.stringify(requestPayload)\n                        })];\n                case 1:\n                    response = _b.sent();\n                    return [4 /*yield*/, response.json()];\n                case 2:\n                    json = _b.sent();\n                    return [2 /*return*/, [\n                            operations_1.replace(path('user'), json.user),\n                            operations_1.replace(path('settings'), { loaded: false, loading: false }),\n                            operations_1.replace(path('routing', 'outlet'), 'user'),\n                            operations_1.replace(path('routing', 'params'), { id: get(path('settings', 'username')) })\n                        ]];\n            }\n        });\n    });\n});\nexports.getUserSettings = process_1.createProcess([startUserSettingsCommand, getUserSettingsCommand]);\nexports.updateUserSettings = process_1.createProcess([updateUserSettingsCommand]);\nexports.usernameInput = process_1.createProcess([usernameInputCommand]);\nexports.emailInput = process_1.createProcess([emailInputCommand]);\nexports.passwordInput = process_1.createProcess([passwordInputCommand]);\nexports.bioInput = process_1.createProcess([bioInputCommand]);\nexports.imageUrlInput = process_1.createProcess([imageUrlInputCommand]);\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// src/containers/SettingsContainer.js","import { WidgetBase } from '@dojo/widget-core/WidgetBase';\nimport { v } from '@dojo/widget-core/d';\n\nexport interface SettingsProperties {\n\timageUrl: string;\n\tonImageUrlInput: Function;\n\tusername: string;\n\tonUsernameInput: Function;\n\tbio: string;\n\tonBioInput: Function;\n\temail: string;\n\tonEmailInput: Function;\n\tpassword: string;\n\tonPasswordInput: Function;\n\tonUpdateSettings: any;\n\tgetUserSettings: Function;\n\tlogout: any;\n}\n\nexport class Settings extends WidgetBase<SettingsProperties> {\n\tprivate _onSubmit(event: MouseEvent) {\n\t\tevent.preventDefault();\n\t\tthis.properties.onUpdateSettings();\n\t}\n\n\tprivate _onImageUrlInput(event: any) {\n\t\tthis.properties.onImageUrlInput(event.target.value);\n\t}\n\n\tprivate _onUsernameInput(event: any) {\n\t\tthis.properties.onUsernameInput(event.target.value);\n\t}\n\n\tprivate _onBioInput(event: any) {\n\t\tthis.properties.onBioInput(event.target.value);\n\t}\n\n\tprivate _onEmailInput(event: any) {\n\t\tthis.properties.onEmailInput(event.target.value);\n\t}\n\n\tprivate _onPasswordInput(event: any) {\n\t\tthis.properties.onPasswordInput(event.target.value);\n\t}\n\n\tonAttach() {\n\t\tthis.properties.getUserSettings();\n\t}\n\n\tprotected render() {\n\t\tconst { email, password, bio, imageUrl, username, logout } = this.properties;\n\n\t\treturn v('div', { classes: 'settings-page' }, [\n\t\t\tv('div', { classes: ['container', 'page'] }, [\n\t\t\t\tv('div', { classes: 'row' }, [\n\t\t\t\t\tv('div', { classes: ['col-md-6', 'offset-md-3', 'col-xs-12'] }, [\n\t\t\t\t\t\tv('h1', { classes: 'text-xs-center' }, ['Your Settings']),\n\t\t\t\t\t\tv('form', [\n\t\t\t\t\t\t\tv('fieldset', [\n\t\t\t\t\t\t\t\tv('fieldset', { classes: 'form-group' }, [\n\t\t\t\t\t\t\t\t\tv('input', {\n\t\t\t\t\t\t\t\t\t\tvalue: imageUrl,\n\t\t\t\t\t\t\t\t\t\tclasses: 'form-control',\n\t\t\t\t\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\t\t\t\t\tplaceholder: 'URL of profile picture',\n\t\t\t\t\t\t\t\t\t\toninput: this._onImageUrlInput\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tv('fieldset', { classes: 'form-group' }, [\n\t\t\t\t\t\t\t\t\tv('input', {\n\t\t\t\t\t\t\t\t\t\tvalue: username,\n\t\t\t\t\t\t\t\t\t\tclasses: ['form-control', 'form-control-lg'],\n\t\t\t\t\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\t\t\t\t\tplaceholder: 'Your Name',\n\t\t\t\t\t\t\t\t\t\toninput: this._onUsernameInput\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tv('fieldset', { classes: 'form-group' }, [\n\t\t\t\t\t\t\t\t\tv('textarea', {\n\t\t\t\t\t\t\t\t\t\tvalue: bio,\n\t\t\t\t\t\t\t\t\t\tclasses: ['form-control', 'form-control-lg'],\n\t\t\t\t\t\t\t\t\t\trows: 8,\n\t\t\t\t\t\t\t\t\t\tplaceholder: 'Short bio about you',\n\t\t\t\t\t\t\t\t\t\toninput: this._onBioInput\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tv('fieldset', { classes: 'form-group' }, [\n\t\t\t\t\t\t\t\t\tv('input', {\n\t\t\t\t\t\t\t\t\t\tvalue: email,\n\t\t\t\t\t\t\t\t\t\tclasses: ['form-control', 'form-control-lg'],\n\t\t\t\t\t\t\t\t\t\ttype: 'email',\n\t\t\t\t\t\t\t\t\t\tplaceholder: 'Email',\n\t\t\t\t\t\t\t\t\t\toninput: this._onEmailInput\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tv('fieldset', { classes: 'form-group' }, [\n\t\t\t\t\t\t\t\t\tv('input', {\n\t\t\t\t\t\t\t\t\t\tvalue: password,\n\t\t\t\t\t\t\t\t\t\tclasses: ['form-control', 'form-control-lg'],\n\t\t\t\t\t\t\t\t\t\ttype: 'password',\n\t\t\t\t\t\t\t\t\t\tplaceholder: 'Password',\n\t\t\t\t\t\t\t\t\t\toninput: this._onPasswordInput\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tv(\n\t\t\t\t\t\t\t\t\t'button',\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tonclick: this._onSubmit,\n\t\t\t\t\t\t\t\t\t\ttype: 'submit',\n\t\t\t\t\t\t\t\t\t\tclasses: ['btn', 'btn-lg', 'btn-primary', 'pull-xs-right']\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t['Update Settings']\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t]),\n\t\t\t\t\t\tv('hr'),\n\t\t\t\t\t\tv('button', { onclick: logout, classes: ['btn', 'btn-outline-danger'] }, [\n\t\t\t\t\t\t\t'Or click here to logout'\n\t\t\t\t\t\t])\n\t\t\t\t\t])\n\t\t\t\t])\n\t\t\t])\n\t\t]);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./~/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_dojo!./src/widgets/Settings.ts","import { Container } from '@dojo/widget-core/Container';\nimport { Store } from '@dojo/stores/Store';\nimport { Settings, SettingsProperties } from './../widgets/Settings';\nimport {\n\tbioInput,\n\temailInput,\n\tpasswordInput,\n\tgetUserSettings,\n\timageUrlInput,\n\tusernameInput,\n\tupdateUserSettings\n} from './../processes/settingsProcesses';\nimport { logout } from '../processes/loginProcesses';\n\nfunction getProperties(store: Store<any>, properties: SettingsProperties): SettingsProperties {\n\tconst { get, path } = store;\n\n\treturn {\n\t\temail: get(path('settings', 'email')),\n\t\tpassword: get(path('settings', 'password')),\n\t\tusername: get(path('settings', 'username')),\n\t\timageUrl: get(path('settings', 'imageUrl')),\n\t\tbio: get(path('settings', 'bio')),\n\t\tonEmailInput: emailInput(store),\n\t\tonPasswordInput: passwordInput(store),\n\t\tonUsernameInput: usernameInput(store),\n\t\tonBioInput: bioInput(store),\n\t\tonImageUrlInput: imageUrlInput(store),\n\t\tonUpdateSettings: updateUserSettings(store),\n\t\tgetUserSettings: getUserSettings(store),\n\t\tlogout: logout(store)\n\t};\n}\n\nexport const SettingsContainer = Container(Settings, 'state', { getProperties });\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader?{\"tsConfigFile\":\"/Users/Anthony/development/test-beds/dojo2-realworld/tslint.json\",\"emitErrors\":true,\"failOnHint\":true}!./~/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_dojo!./src/containers/SettingsContainer.ts","import { createCommandFactory, createProcess } from '@dojo/stores/process';\nimport { replace } from '@dojo/stores/state/operations';\nimport { State } from '../interfaces';\nimport { getHeaders } from './utils';\n\nconst commandFactory = createCommandFactory<State>();\n\nconst emailInputCommand = commandFactory(({ payload: [username], path }) => {\n\treturn [replace(path('settings', 'email'), username)];\n});\n\nconst passwordInputCommand = commandFactory(({ payload: [password], path }) => {\n\treturn [replace(path('settings', 'password'), password)];\n});\n\nconst usernameInputCommand = commandFactory(({ payload: [username], path }) => {\n\treturn [replace(path('settings', 'username'), username)];\n});\n\nconst bioInputCommand = commandFactory(({ payload: [bio], path }) => {\n\treturn [replace(path('settings', 'bio'), bio)];\n});\n\nconst imageUrlInputCommand = commandFactory(({ payload: [imageUrl], path }) => {\n\treturn [replace(path('settings', 'image'), imageUrl)];\n});\n\nconst startUserSettingsCommand = commandFactory(({ path, get }) => {\n\treturn [replace(path('settings'), { loaded: false, loading: true })];\n});\n\nconst getUserSettingsCommand = commandFactory(async ({ path, get }) => {\n\treturn [replace(path('settings'), get(path('user')))];\n});\n\nconst updateUserSettingsCommand = commandFactory(async ({ path, get }) => {\n\tconst token = get(path('user', 'token'));\n\n\tconst requestPayload: any = {\n\t\timage: get(path('settings', 'image')),\n\t\tbio: get(path('settings', 'bio')),\n\t\tusername: get(path('settings', 'username')),\n\t\temail: get(path('settings', 'email'))\n\t};\n\tconst password = get(path('settings', 'password'));\n\tif (password) {\n\t\trequestPayload.password = password;\n\t}\n\tconst response = await fetch(`https://conduit.productionready.io/api/user`, {\n\t\tmethod: 'put',\n\t\theaders: getHeaders(token),\n\t\tbody: JSON.stringify(requestPayload)\n\t});\n\n\tconst json = await response.json();\n\n\treturn [\n\t\treplace(path('user'), json.user),\n\t\treplace(path('settings'), { loaded: false, loading: false }),\n\t\treplace(path('routing', 'outlet'), 'user'),\n\t\treplace(path('routing', 'params'), { id: get(path('settings', 'username')) })\n\t];\n});\n\nexport const getUserSettings = createProcess([startUserSettingsCommand, getUserSettingsCommand]);\nexport const updateUserSettings = createProcess([updateUserSettingsCommand]);\nexport const usernameInput = createProcess([usernameInputCommand]);\nexport const emailInput = createProcess([emailInputCommand]);\nexport const passwordInput = createProcess([passwordInputCommand]);\nexport const bioInput = createProcess([bioInputCommand]);\nexport const imageUrlInput = createProcess([imageUrlInputCommand]);\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./~/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_dojo!./src/processes/settingsProcesses.ts"],"sourceRoot":""}