{"version":3,"sources":["webpack:///src/containers/SettingsContainer.js","webpack:///./src/widgets/Settings.ts","webpack:///./src/containers/SettingsContainer.ts","webpack:///./src/processes/settingsProcesses.ts"],"names":["dojoWebpackJsonp_dojo2_realworld","102","module","exports","__webpack_require__","Object","defineProperty","value","tslib_1","WidgetBase_1","d_1","Settings","_super","apply","this","arguments","__extends","prototype","_onSubmit","event","preventDefault","properties","onUpdateSettings","_onImageUrlInput","onImageUrlInput","target","_onUsernameInput","onUsernameInput","_onBioInput","onBioInput","_onEmailInput","onEmailInput","_onPasswordInput","onPasswordInput","render","_a","email","password","bio","imageUrl","username","v","classes","type","placeholder","oninput","rows","onclick","WidgetBase","92","getProperties","store","get","path","settingsProcesses_1","getUserSettings","emailInput","passwordInput","usernameInput","bioInput","imageUrlInput","updateUserSettings","Container_1","Settings_1","SettingsContainer","Container","95","_this","process_1","operations_1","commandFactory","createCommandFactory","emailInputCommand","_b","__read","payload","replace","passwordInputCommand","usernameInputCommand","bioInputCommand","imageUrlInputCommand","startUserSettingsCommand","loaded","loading","getUserSettingsCommand","__awaiter","token","headers","response","json","settings","__generator","label","Headers","Content-Type","Authorization","fetch","sent","__assign","user","updateUserSettingsCommand","requestPayload","session","method","body","JSON","stringify","undefined","id","createProcess"],"mappings":"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","file":"src/containers/SettingsContainer.js","sourcesContent":["/*!\n * [Dojo](https://dojo.io/)\n * Copyright [JS Foundation](https://js.foundation/) & contributors\n * [New BSD license](https://github.com/dojo/meta/blob/master/LICENSE)\n * All rights reserved\n * \n */\ndojoWebpackJsonp_dojo2_realworld([1],{\n\n/***/ 102:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(0);\nvar WidgetBase_1 = __webpack_require__(3);\nvar d_1 = __webpack_require__(2);\nvar Settings = /** @class */ (function (_super) {\n    tslib_1.__extends(Settings, _super);\n    function Settings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Settings.prototype._onSubmit = function (event) {\n        event.preventDefault();\n        this.properties.onUpdateSettings();\n    };\n    Settings.prototype._onImageUrlInput = function (event) {\n        this.properties.onImageUrlInput(event.target.value);\n    };\n    Settings.prototype._onUsernameInput = function (event) {\n        this.properties.onUsernameInput(event.target.value);\n    };\n    Settings.prototype._onBioInput = function (event) {\n        this.properties.onBioInput(event.target.value);\n    };\n    Settings.prototype._onEmailInput = function (event) {\n        this.properties.onEmailInput(event.target.value);\n    };\n    Settings.prototype._onPasswordInput = function (event) {\n        this.properties.onPasswordInput(event.target.value);\n    };\n    Settings.prototype.render = function () {\n        var _a = this.properties, email = _a.email, password = _a.password, bio = _a.bio, imageUrl = _a.imageUrl, username = _a.username;\n        return d_1.v('div', { classes: 'settings-page' }, [\n            d_1.v('div', { classes: ['container', 'page'] }, [\n                d_1.v('div', { classes: 'row' }, [\n                    d_1.v('div', { classes: ['col-md-6', 'offset-md-3', 'col-xs-12'] }, [\n                        d_1.v('h1', { classes: 'text-xs-center' }, ['Your Settings']),\n                        d_1.v('form', [\n                            d_1.v('fieldset', [\n                                d_1.v('fieldset', { classes: 'form-group' }, [\n                                    d_1.v('input', {\n                                        value: imageUrl,\n                                        classes: 'form-control',\n                                        type: 'text',\n                                        placeholder: 'URL of profile picture',\n                                        oninput: this._onImageUrlInput\n                                    })\n                                ]),\n                                d_1.v('fieldset', { classes: 'form-group' }, [\n                                    d_1.v('input', {\n                                        value: username,\n                                        classes: ['form-control', 'form-control-lg'],\n                                        type: 'text',\n                                        placeholder: 'Your Name',\n                                        oninput: this._onUsernameInput\n                                    })\n                                ]),\n                                d_1.v('fieldset', { classes: 'form-group' }, [\n                                    d_1.v('textarea', {\n                                        value: bio,\n                                        classes: ['form-control', 'form-control-lg'],\n                                        rows: 8,\n                                        placeholder: 'Short bio about you',\n                                        oninput: this._onBioInput\n                                    })\n                                ]),\n                                d_1.v('fieldset', { classes: 'form-group' }, [\n                                    d_1.v('input', {\n                                        value: email,\n                                        classes: ['form-control', 'form-control-lg'],\n                                        type: 'email',\n                                        placeholder: 'Email',\n                                        oninput: this._onEmailInput\n                                    })\n                                ]),\n                                d_1.v('fieldset', { classes: 'form-group' }, [\n                                    d_1.v('input', {\n                                        value: password,\n                                        classes: ['form-control', 'form-control-lg'],\n                                        type: 'password',\n                                        placeholder: 'Password',\n                                        oninput: this._onPasswordInput\n                                    })\n                                ]),\n                                d_1.v('button', {\n                                    onclick: this._onSubmit,\n                                    type: 'submit',\n                                    classes: ['btn', 'btn-lg', 'btn-primary', 'pull-xs-right']\n                                }, ['Update Settings'])\n                            ])\n                        ])\n                    ])\n                ])\n            ])\n        ]);\n    };\n    return Settings;\n}(WidgetBase_1.WidgetBase));\nexports.Settings = Settings;\n\n\n/***/ }),\n\n/***/ 92:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Container_1 = __webpack_require__(18);\nvar Settings_1 = __webpack_require__(102);\nvar settingsProcesses_1 = __webpack_require__(95);\nfunction getProperties(store, properties) {\n    var get = store.get, path = store.path;\n    if (!get(path('settings', 'loading')) && !get(path('settings', 'loaded'))) {\n        settingsProcesses_1.getUserSettings(store)();\n    }\n    return {\n        email: get(path('settings', 'email')),\n        password: get(path('settings', 'password')),\n        username: get(path('settings', 'username')),\n        imageUrl: get(path('settings', 'imageUrl')),\n        bio: get(path('settings', 'bio')),\n        onEmailInput: settingsProcesses_1.emailInput(store),\n        onPasswordInput: settingsProcesses_1.passwordInput(store),\n        onUsernameInput: settingsProcesses_1.usernameInput(store),\n        onBioInput: settingsProcesses_1.bioInput(store),\n        onImageUrlInput: settingsProcesses_1.imageUrlInput(store),\n        onUpdateSettings: settingsProcesses_1.updateUserSettings(store)\n    };\n}\nexports.SettingsContainer = Container_1.Container(Settings_1.Settings, 'state', { getProperties: getProperties });\n\n\n/***/ }),\n\n/***/ 95:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar _this = this;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(0);\nvar process_1 = __webpack_require__(9);\nvar operations_1 = __webpack_require__(10);\nvar commandFactory = process_1.createCommandFactory();\nvar emailInputCommand = commandFactory(function (_a) {\n    var _b = tslib_1.__read(_a.payload, 1), username = _b[0], path = _a.path;\n    return [operations_1.replace(path('settings', 'email'), username)];\n});\nvar passwordInputCommand = commandFactory(function (_a) {\n    var _b = tslib_1.__read(_a.payload, 1), password = _b[0], path = _a.path;\n    return [operations_1.replace(path('settings', 'password'), password)];\n});\nvar usernameInputCommand = commandFactory(function (_a) {\n    var _b = tslib_1.__read(_a.payload, 1), username = _b[0], path = _a.path;\n    return [operations_1.replace(path('settings', 'username'), username)];\n});\nvar bioInputCommand = commandFactory(function (_a) {\n    var _b = tslib_1.__read(_a.payload, 1), bio = _b[0], path = _a.path;\n    return [operations_1.replace(path('settings', 'bio'), bio)];\n});\nvar imageUrlInputCommand = commandFactory(function (_a) {\n    var _b = tslib_1.__read(_a.payload, 1), imageUrl = _b[0], path = _a.path;\n    return [operations_1.replace(path('settings', 'imageUrl'), imageUrl)];\n});\nvar startUserSettingsCommand = commandFactory(function (_a) {\n    var path = _a.path, get = _a.get;\n    return [operations_1.replace(path('settings'), { loaded: false, loading: true })];\n});\nvar getUserSettingsCommand = commandFactory(function (_a) {\n    var path = _a.path, get = _a.get;\n    return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        var token, headers, response, json, settings;\n        return tslib_1.__generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    token = get(path('session', 'token'));\n                    headers = new Headers({\n                        'Content-Type': 'application/json',\n                        Authorization: \"Token \" + token\n                    });\n                    return [4 /*yield*/, fetch(\"https://conduit.productionready.io/api/user\", { headers: headers })];\n                case 1:\n                    response = _b.sent();\n                    return [4 /*yield*/, response.json()];\n                case 2:\n                    json = _b.sent();\n                    settings = tslib_1.__assign({}, json.user, { loaded: true, loading: false });\n                    return [2 /*return*/, [operations_1.replace(path('settings'), settings)]];\n            }\n        });\n    });\n});\nvar updateUserSettingsCommand = commandFactory(function (_a) {\n    var path = _a.path, get = _a.get;\n    return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        var token, headers, requestPayload, password, response, json, session;\n        return tslib_1.__generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    token = get(path('session', 'token'));\n                    headers = new Headers({\n                        'Content-Type': 'application/json',\n                        Authorization: \"Token \" + token\n                    });\n                    requestPayload = {\n                        imageUrl: get(path('settings', 'imageUrl')),\n                        bio: get(path('settings', 'bio')),\n                        username: get(path('settings', 'username')),\n                        email: get(path('settings', 'email'))\n                    };\n                    password = get(path('settings', 'password'));\n                    if (password) {\n                        requestPayload.password = password;\n                    }\n                    return [4 /*yield*/, fetch(\"https://conduit.productionready.io/api/user\", {\n                            method: 'put',\n                            headers: headers,\n                            body: JSON.stringify(requestPayload)\n                        })];\n                case 1:\n                    response = _b.sent();\n                    return [4 /*yield*/, response.json()];\n                case 2:\n                    json = _b.sent();\n                    session = tslib_1.__assign({}, get(path('session')), json.user);\n                    return [2 /*return*/, [\n                            operations_1.replace(path('session'), session),\n                            operations_1.replace(path('settings'), { loaded: false, loading: false }),\n                            operations_1.replace(path('routing', 'outlet'), 'user'),\n                            operations_1.replace(path('profile'), undefined),\n                            operations_1.replace(path('routing', 'params'), { id: get(path('settings', 'username')) })\n                        ]];\n            }\n        });\n    });\n});\nexports.getUserSettings = process_1.createProcess([startUserSettingsCommand, getUserSettingsCommand]);\nexports.updateUserSettings = process_1.createProcess([updateUserSettingsCommand]);\nexports.usernameInput = process_1.createProcess([usernameInputCommand]);\nexports.emailInput = process_1.createProcess([emailInputCommand]);\nexports.passwordInput = process_1.createProcess([passwordInputCommand]);\nexports.bioInput = process_1.createProcess([bioInputCommand]);\nexports.imageUrlInput = process_1.createProcess([imageUrlInputCommand]);\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// src/containers/SettingsContainer.js","import { WidgetBase } from '@dojo/widget-core/WidgetBase';\nimport { v } from '@dojo/widget-core/d';\n\nexport interface SettingsProperties {\n\timageUrl: string;\n\tonImageUrlInput: Function;\n\tusername: string;\n\tonUsernameInput: Function;\n\tbio: string;\n\tonBioInput: Function;\n\temail: string;\n\tonEmailInput: Function;\n\tpassword: string;\n\tonPasswordInput: Function;\n\tonUpdateSettings: any;\n}\n\nexport class Settings extends WidgetBase<SettingsProperties> {\n\tprivate _onSubmit(event: MouseEvent) {\n\t\tevent.preventDefault();\n\t\tthis.properties.onUpdateSettings();\n\t}\n\n\tprivate _onImageUrlInput(event: any) {\n\t\tthis.properties.onImageUrlInput(event.target.value);\n\t}\n\n\tprivate _onUsernameInput(event: any) {\n\t\tthis.properties.onUsernameInput(event.target.value);\n\t}\n\n\tprivate _onBioInput(event: any) {\n\t\tthis.properties.onBioInput(event.target.value);\n\t}\n\n\tprivate _onEmailInput(event: any) {\n\t\tthis.properties.onEmailInput(event.target.value);\n\t}\n\n\tprivate _onPasswordInput(event: any) {\n\t\tthis.properties.onPasswordInput(event.target.value);\n\t}\n\n\tprotected render() {\n\t\tconst { email, password, bio, imageUrl, username } = this.properties;\n\n\t\treturn v('div', { classes: 'settings-page' }, [\n\t\t\tv('div', { classes: ['container', 'page'] }, [\n\t\t\t\tv('div', { classes: 'row' }, [\n\t\t\t\t\tv('div', { classes: ['col-md-6', 'offset-md-3', 'col-xs-12'] }, [\n\t\t\t\t\t\tv('h1', { classes: 'text-xs-center' }, ['Your Settings']),\n\t\t\t\t\t\tv('form', [\n\t\t\t\t\t\t\tv('fieldset', [\n\t\t\t\t\t\t\t\tv('fieldset', { classes: 'form-group' }, [\n\t\t\t\t\t\t\t\t\tv('input', {\n\t\t\t\t\t\t\t\t\t\tvalue: imageUrl,\n\t\t\t\t\t\t\t\t\t\tclasses: 'form-control',\n\t\t\t\t\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\t\t\t\t\tplaceholder: 'URL of profile picture',\n\t\t\t\t\t\t\t\t\t\toninput: this._onImageUrlInput\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tv('fieldset', { classes: 'form-group' }, [\n\t\t\t\t\t\t\t\t\tv('input', {\n\t\t\t\t\t\t\t\t\t\tvalue: username,\n\t\t\t\t\t\t\t\t\t\tclasses: ['form-control', 'form-control-lg'],\n\t\t\t\t\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\t\t\t\t\tplaceholder: 'Your Name',\n\t\t\t\t\t\t\t\t\t\toninput: this._onUsernameInput\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tv('fieldset', { classes: 'form-group' }, [\n\t\t\t\t\t\t\t\t\tv('textarea', {\n\t\t\t\t\t\t\t\t\t\tvalue: bio,\n\t\t\t\t\t\t\t\t\t\tclasses: ['form-control', 'form-control-lg'],\n\t\t\t\t\t\t\t\t\t\trows: 8,\n\t\t\t\t\t\t\t\t\t\tplaceholder: 'Short bio about you',\n\t\t\t\t\t\t\t\t\t\toninput: this._onBioInput\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tv('fieldset', { classes: 'form-group' }, [\n\t\t\t\t\t\t\t\t\tv('input', {\n\t\t\t\t\t\t\t\t\t\tvalue: email,\n\t\t\t\t\t\t\t\t\t\tclasses: ['form-control', 'form-control-lg'],\n\t\t\t\t\t\t\t\t\t\ttype: 'email',\n\t\t\t\t\t\t\t\t\t\tplaceholder: 'Email',\n\t\t\t\t\t\t\t\t\t\toninput: this._onEmailInput\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tv('fieldset', { classes: 'form-group' }, [\n\t\t\t\t\t\t\t\t\tv('input', {\n\t\t\t\t\t\t\t\t\t\tvalue: password,\n\t\t\t\t\t\t\t\t\t\tclasses: ['form-control', 'form-control-lg'],\n\t\t\t\t\t\t\t\t\t\ttype: 'password',\n\t\t\t\t\t\t\t\t\t\tplaceholder: 'Password',\n\t\t\t\t\t\t\t\t\t\toninput: this._onPasswordInput\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tv(\n\t\t\t\t\t\t\t\t\t'button',\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tonclick: this._onSubmit,\n\t\t\t\t\t\t\t\t\t\ttype: 'submit',\n\t\t\t\t\t\t\t\t\t\tclasses: ['btn', 'btn-lg', 'btn-primary', 'pull-xs-right']\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t['Update Settings']\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t])\n\t\t\t\t\t])\n\t\t\t\t])\n\t\t\t])\n\t\t]);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./~/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_dojo!./src/widgets/Settings.ts","import { Container } from '@dojo/widget-core/Container';\nimport { Store } from '@dojo/stores/Store';\nimport { Settings, SettingsProperties } from './../widgets/Settings';\nimport {\n\tbioInput,\n\temailInput,\n\tpasswordInput,\n\tgetUserSettings,\n\timageUrlInput,\n\tusernameInput,\n\tupdateUserSettings\n} from './../processes/settingsProcesses';\n\nfunction getProperties(store: Store<any>, properties: SettingsProperties): SettingsProperties {\n\tconst { get, path } = store;\n\n\tif (!get(path('settings', 'loading')) && !get(path('settings', 'loaded'))) {\n\t\tgetUserSettings(store)();\n\t}\n\n\treturn {\n\t\temail: get(path('settings', 'email')),\n\t\tpassword: get(path('settings', 'password')),\n\t\tusername: get(path('settings', 'username')),\n\t\timageUrl: get(path('settings', 'imageUrl')),\n\t\tbio: get(path('settings', 'bio')),\n\t\tonEmailInput: emailInput(store),\n\t\tonPasswordInput: passwordInput(store),\n\t\tonUsernameInput: usernameInput(store),\n\t\tonBioInput: bioInput(store),\n\t\tonImageUrlInput: imageUrlInput(store),\n\t\tonUpdateSettings: updateUserSettings(store)\n\t};\n}\n\nexport const SettingsContainer = Container(Settings, 'state', { getProperties });\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader?{\"tsConfigFile\":\"/Users/Anthony/development/test-beds/dojo2-realworld/tslint.json\",\"emitErrors\":true,\"failOnHint\":true}!./~/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_dojo!./src/containers/SettingsContainer.ts","import { createCommandFactory, createProcess } from '@dojo/stores/process';\nimport { replace } from '@dojo/stores/state/operations';\n\nconst commandFactory = createCommandFactory<any>();\n\nconst emailInputCommand = commandFactory(({ payload: [username], path }) => {\n\treturn [replace(path('settings', 'email'), username)];\n});\n\nconst passwordInputCommand = commandFactory(({ payload: [password], path }) => {\n\treturn [replace(path('settings', 'password'), password)];\n});\n\nconst usernameInputCommand = commandFactory(({ payload: [username], path }) => {\n\treturn [replace(path('settings', 'username'), username)];\n});\n\nconst bioInputCommand = commandFactory(({ payload: [bio], path }) => {\n\treturn [replace(path('settings', 'bio'), bio)];\n});\n\nconst imageUrlInputCommand = commandFactory(({ payload: [imageUrl], path }) => {\n\treturn [replace(path('settings', 'imageUrl'), imageUrl)];\n});\n\nconst startUserSettingsCommand = commandFactory(({ path, get }) => {\n\treturn [replace(path('settings'), { loaded: false, loading: true })];\n});\n\nconst getUserSettingsCommand = commandFactory(async ({ path, get }) => {\n\tconst token = get(path('session', 'token'));\n\tconst headers = new Headers({\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${token}`\n\t});\n\tconst response = await fetch(`https://conduit.productionready.io/api/user`, { headers });\n\n\tconst json = await response.json();\n\tconst settings = {\n\t\t...json.user,\n\t\tloaded: true,\n\t\tloading: false\n\t};\n\n\treturn [replace(path('settings'), settings)];\n});\n\nconst updateUserSettingsCommand = commandFactory(async ({ path, get }) => {\n\tconst token = get(path('session', 'token'));\n\tconst headers = new Headers({\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${token}`\n\t});\n\tconst requestPayload: any = {\n\t\timageUrl: get(path('settings', 'imageUrl')),\n\t\tbio: get(path('settings', 'bio')),\n\t\tusername: get(path('settings', 'username')),\n\t\temail: get(path('settings', 'email'))\n\t};\n\tconst password = get(path('settings', 'password'));\n\tif (password) {\n\t\trequestPayload.password = password;\n\t}\n\tconst response = await fetch(`https://conduit.productionready.io/api/user`, {\n\t\tmethod: 'put',\n\t\theaders,\n\t\tbody: JSON.stringify(requestPayload)\n\t});\n\n\tconst json = await response.json();\n\tconst session = {\n\t\t...get(path('session')),\n\t\t...json.user\n\t};\n\n\treturn [\n\t\treplace(path('session'), session),\n\t\treplace(path('settings'), { loaded: false, loading: false }),\n\t\treplace(path('routing', 'outlet'), 'user'),\n\t\treplace(path('profile'), undefined),\n\t\treplace(path('routing', 'params'), { id: get(path('settings', 'username')) })\n\t];\n});\n\nexport const getUserSettings = createProcess([startUserSettingsCommand, getUserSettingsCommand]);\nexport const updateUserSettings = createProcess([updateUserSettingsCommand]);\nexport const usernameInput = createProcess([usernameInputCommand]);\nexport const emailInput = createProcess([emailInputCommand]);\nexport const passwordInput = createProcess([passwordInputCommand]);\nexport const bioInput = createProcess([bioInputCommand]);\nexport const imageUrlInput = createProcess([imageUrlInputCommand]);\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./~/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_dojo!./src/processes/settingsProcesses.ts"],"sourceRoot":""}