{"version":3,"sources":["webpack:///src/containers/ArticleContainer.js","webpack:///./src/containers/ArticleContainer.ts","webpack:///./src/widgets/Article.ts","webpack:///./src/widgets/Comment.ts","webpack:///./~/marked/lib/marked.js"],"names":["dojoWebpackJsonp_dojo2_realworld","85","module","exports","__webpack_require__","getProperties","store","properties","get","path","articleSlug","isLoading","slug","articleProcesses_1","getArticle","article","comments","newComment","loaded","isAuthenticated","loggedInUser","deleteComment","deleteCommentProcess","addComment","addCommentProcess","onNewCommentInput","newCommentInputProcess","Object","defineProperty","value","Container_1","Article_1","ArticleContainer","Container","Article","92","tslib_1","WidgetBase_1","d_1","Link_1","marked","Comment_1","_super","apply","this","arguments","__extends","prototype","_addComment","event","preventDefault","_onNewCommentInput","target","render","_a","_b","_c","title","_d","author","createdAt","v","classes","w","Link","to","params","id","username","src","image","Date","toDateString","following","favorited","favoritesCount","innerHTML","body","sanitize","tagList","map","tag","href","oninput","placeholder","rows","onclick","comment","index","Comment","key","WidgetBase","93","_deleteComment","98","global","Lexer","options","tokens","links","defaults","rules","block","normal","gfm","tables","InlineLexer","inline","renderer","Renderer","Error","breaks","pedantic","Parser","token","escape","html","encode","replace","unescape","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","regex","opt","source","self","name","val","RegExp","resolveUrl","base","baseUrls","test","slice","noop","merge","obj","i","length","hasOwnProperty","call","callback","pending","highlight","lex","e","done","err","out","parse","type","text","lang","code","escaped","message","silent","newline","fences","hr","heading","nptable","lheading","blockquote","list","def","table","paragraph","bullet","item","_tag","top","bq","next","loose","cap","bull","b","space","l","exec","push","depth","header","split","align","cells","ordered","match","indexOf","smartLists","join","pre","sanitizer","charCodeAt","autolink","url","link","reflink","nolink","strong","em","br","del","_inside","_href","output","mangle","inLink","outputLink","codespan","trim","smartypants","ch","Math","random","toString","langPrefix","quote","level","raw","headerPrefix","xhtml","listitem","tablerow","content","tablecell","flags","prot","decodeURIComponent","baseUrl","originIndependentUrl","reverse","tok","pop","peek","parseText","row","cell","j","setOptions","parser","lexer","inlineLexer","window"],"mappings":"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","file":"src/containers/ArticleContainer.js","sourcesContent":["/*!\n * [Dojo](https://dojo.io/)\n * Copyright [JS Foundation](https://js.foundation/) & contributors\n * [New BSD license](https://github.com/dojo/meta/blob/master/LICENSE)\n * All rights reserved\n * \n */\ndojoWebpackJsonp_dojo2_realworld([0],{\n\n/***/ 85:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Container_1 = __webpack_require__(18);\nvar Article_1 = __webpack_require__(92);\nvar articleProcesses_1 = __webpack_require__(38);\nfunction getProperties(store, properties) {\n    var get = store.get, path = store.path;\n    var articleSlug = get(path('article', 'article', 'slug'));\n    var isLoading = get(path('article', 'loading'));\n    if (properties.slug !== articleSlug && !isLoading) {\n        articleProcesses_1.getArticle(store)(properties.slug);\n    }\n    return {\n        article: get(path('article', 'article')),\n        comments: get(path('article', 'comments')),\n        newComment: get(path('article', 'newComment')),\n        loaded: get(path('article', 'loaded')),\n        isAuthenticated: get(path('session', 'isAuthenticated')),\n        loggedInUser: get(path('session', 'username')),\n        deleteComment: articleProcesses_1.deleteCommentProcess(store),\n        addComment: articleProcesses_1.addCommentProcess(store),\n        onNewCommentInput: articleProcesses_1.newCommentInputProcess(store)\n    };\n}\nexports.ArticleContainer = Container_1.Container(Article_1.Article, 'state', { getProperties: getProperties });\n\n\n/***/ }),\n\n/***/ 92:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(0);\nvar WidgetBase_1 = __webpack_require__(3);\nvar d_1 = __webpack_require__(2);\nvar Link_1 = __webpack_require__(24);\nvar marked = __webpack_require__(98);\nvar Comment_1 = __webpack_require__(93);\nvar Article = /** @class */ (function (_super) {\n    tslib_1.__extends(Article, _super);\n    function Article() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Article.prototype._addComment = function (event) {\n        event.preventDefault();\n        this.properties.addComment(this.properties.article.slug, this.properties.newComment);\n    };\n    Article.prototype._onNewCommentInput = function (event) {\n        this.properties.onNewCommentInput(event.target.value);\n    };\n    Article.prototype.render = function () {\n        var _a = this.properties, isAuthenticated = _a.isAuthenticated, newComment = _a.newComment, deleteComment = _a.deleteComment, _b = _a.loaded, loaded = _b === void 0 ? false : _b, comments = _a.comments, loggedInUser = _a.loggedInUser, article = _a.article, _c = _a.article, title = _c.title, _d = _c.author, author = _d === void 0 ? {} : _d, createdAt = _c.createdAt;\n        if (!loaded) {\n            return null;\n        }\n        return d_1.v('div', { classes: 'article-page' }, [\n            d_1.v('div', { classes: 'banner' }, [\n                d_1.v('div', { classes: 'container' }, [\n                    d_1.v('h1', [title]),\n                    d_1.v('div', { classes: 'article-meta' }, [\n                        d_1.w(Link_1.Link, { to: 'user', params: { id: author.username } }, [d_1.v('img', { src: author.image })]),\n                        d_1.v('div', { classes: 'info' }, [\n                            d_1.w(Link_1.Link, { to: 'user', classes: 'author', params: { id: author.username } }, [\n                                author.username\n                            ]),\n                            d_1.v('span', { classes: 'date' }, [new Date(createdAt).toDateString()])\n                        ]),\n                        isAuthenticated\n                            ? d_1.v('button', {\n                                classes: [\n                                    'btn',\n                                    'btn-sm',\n                                    author.following ? 'btn-secondary' : 'btn-outline-secondary'\n                                ]\n                            }, [\n                                d_1.v('i', { classes: 'ion-plus-round' }),\n                                (author.following ? ' Unfollow' : ' Follow') + \" \" + author.username\n                            ])\n                            : null,\n                        isAuthenticated\n                            ? d_1.v('button', {\n                                classes: [\n                                    'btn',\n                                    'btn-sm',\n                                    article.favorited ? 'btn-primary' : 'btn-outline-primary'\n                                ]\n                            }, [\n                                d_1.v('i', { classes: 'ion-heart' }),\n                                \"\" + (article.favorited ? ' Unfavorite' : ' Favorite'),\n                                d_1.v('span', { classes: 'counter' }, [\"(\" + article.favoritesCount + \")\"])\n                            ])\n                            : null\n                    ])\n                ])\n            ]),\n            d_1.v('div', { classes: ['container', 'page'] }, [\n                d_1.v('div', { classes: ['row', 'article-content'] }, [\n                    d_1.v('div', { classes: 'col-xs-12' }, [\n                        d_1.v('div', { innerHTML: marked(article.body, { sanitize: true }) }),\n                        d_1.v('ul', { classes: 'tag-list' }, article.tagList.map(function (tag) {\n                            return d_1.v('li', { classes: ['tag-default', 'tag-pill', 'tag-outline'] }, [tag]);\n                        }))\n                    ])\n                ]),\n                d_1.v('hr'),\n                d_1.v('div', { classes: 'article-actions' }, [\n                    d_1.v('div', { classes: 'article-meta' }, [\n                        d_1.v('a', { href: '' }, [d_1.v('img', { src: author.image })]),\n                        d_1.v('div', { classes: 'info' }, [\n                            d_1.v('a', { href: '', classes: 'author' }, [author.username]),\n                            d_1.v('span', { classes: 'date' }, [new Date(createdAt).toDateString()])\n                        ]),\n                        isAuthenticated\n                            ? d_1.v('button', {\n                                classes: [\n                                    'btn',\n                                    'btn-sm',\n                                    author.following ? 'btn-secondary' : 'btn-outline-secondary'\n                                ]\n                            }, [\n                                d_1.v('i', { classes: 'ion-plus-round' }),\n                                (author.following ? ' Unfollow' : ' Follow') + \" \" + author.username\n                            ])\n                            : null,\n                        isAuthenticated\n                            ? d_1.v('button', {\n                                classes: [\n                                    'btn',\n                                    'btn-sm',\n                                    article.favorited ? 'btn-primary' : 'btn-outline-primary'\n                                ]\n                            }, [\n                                d_1.v('i', { classes: 'ion-heart' }),\n                                \"\" + (article.favorited ? ' Unfavorite' : ' Favorite'),\n                                d_1.v('span', { classes: 'counter' }, [\"(\" + article.favoritesCount + \")\"])\n                            ])\n                            : null\n                    ])\n                ]),\n                d_1.v('div', { classes: 'row' }, [\n                    d_1.v('div', { classes: ['col-xs-12', 'col-md-8', 'offset-md-2'] }, [\n                        isAuthenticated\n                            ? d_1.v('form', { classes: ['card', 'comment-form'] }, [\n                                d_1.v('div', { classes: 'card-block' }, [\n                                    d_1.v('textarea', {\n                                        value: newComment,\n                                        oninput: this._onNewCommentInput,\n                                        classes: 'form-control',\n                                        placeholder: 'Write a comment...',\n                                        rows: 3\n                                    })\n                                ]),\n                                d_1.v('div', { classes: 'card-footer' }, [\n                                    d_1.v('img', { classes: 'comment-author-img', src: '' }),\n                                    d_1.v('button', { onclick: this._addComment, classes: ['btn', 'btn-sm', 'btn-primary'] }, ['Post Comment'])\n                                ])\n                            ])\n                            : d_1.v('p', [\n                                d_1.w(Link_1.Link, { to: 'login' }, ['Sign In']),\n                                ' or ',\n                                d_1.w(Link_1.Link, { to: 'register' }, ['Sign Up']),\n                                ' to add comments on this article.'\n                            ]),\n                        d_1.v('div', comments.map(function (comment, index) {\n                            return d_1.w(Comment_1.Comment, {\n                                key: index,\n                                comment: comment,\n                                loggedInUser: loggedInUser,\n                                deleteComment: deleteComment,\n                                slug: article.slug\n                            });\n                        }))\n                    ])\n                ])\n            ])\n        ]);\n    };\n    return Article;\n}(WidgetBase_1.WidgetBase));\nexports.Article = Article;\n\n\n/***/ }),\n\n/***/ 93:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(0);\nvar WidgetBase_1 = __webpack_require__(3);\nvar d_1 = __webpack_require__(2);\nvar Link_1 = __webpack_require__(24);\nvar Comment = /** @class */ (function (_super) {\n    tslib_1.__extends(Comment, _super);\n    function Comment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Comment.prototype._deleteComment = function () {\n        this.properties.deleteComment(this.properties.slug, this.properties.comment.id);\n    };\n    Comment.prototype.render = function () {\n        var _a = this.properties, comment = _a.comment, loggedInUser = _a.loggedInUser;\n        return d_1.v('div', { classes: 'card' }, [\n            d_1.v('div', { classes: 'card-block' }, [d_1.v('p', { classes: 'card-text' }, [comment.body])]),\n            d_1.v('div', { classes: 'card-footer' }, [\n                d_1.w(Link_1.Link, { to: 'user', classes: 'comment-author', params: { id: comment.author.username } }, [\n                    d_1.v('img', { src: comment.author.image, classes: 'comment-author-img' })\n                ]),\n                d_1.w(Link_1.Link, { to: 'user', classes: 'comment-author', params: { id: comment.author.username } }, [\n                    \" \" + comment.author.username\n                ]),\n                d_1.v('div', { classes: 'date-posted' }, [new Date(comment.createdAt).toDateString()]),\n                loggedInUser\n                    ? d_1.v('div', { classes: 'mod-options' }, [\n                        d_1.v('i', { classes: 'ion-trash-a', onclick: this._deleteComment })\n                    ])\n                    : null\n            ])\n        ]);\n    };\n    return Comment;\n}(WidgetBase_1.WidgetBase));\nexports.Comment = Comment;\n\n\n/***/ }),\n\n/***/ 98:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n;(function() {\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n  table: noop,\n  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n  text: /^[^\\n]+/\n};\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = replace(block.item, 'gm')\n  (/bull/g, block.bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block.bullet)\n  ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n  ('def', '\\\\n+(?=' + block.def.source + ')')\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('blockquote', block.blockquote)\n  ('tag', '<' + block._tag)\n  ('def', block.def)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\s*\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top, bq) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top, true);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false, bq);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.links[cap[1].toLowerCase()] = {\n        href: cap[2],\n        title: cap[3]\n      };\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)([\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n};\n\ninline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|')\n    ()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer;\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(\n          cap[1].charAt(6) === ':'\n          ? this.mangle(cap[1].substring(7))\n          : this.mangle(cap[1])\n        );\n        href = this.mangle('mailto:') + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      src = src.substring(cap[0].length);\n      text = escape(cap[1]);\n      href = text;\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href)\n    , title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return '';\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return '';\n    }\n  }\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer;\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options, renderer) {\n  var parser = new Parser(options, renderer);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options, this.renderer);\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        this.token.text);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = ''\n        , body = ''\n        , i\n        , row\n        , cell\n        , flags\n        , j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        flags = { header: true, align: this.token.align[i] };\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      var body = ''\n        , ordered = this.token.ordered;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered);\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n\t// explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = base.replace(/[^/]*$/, '');\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[^]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[^]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nbaseUrls = {};\noriginIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occured:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer,\n  xhtml: false,\n  baseUrl: null\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (true) {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  this.marked = marked;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(19)))\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// src/containers/ArticleContainer.js","import { Container } from '@dojo/widget-core/Container';\nimport { Store } from '@dojo/stores/Store';\nimport { Article } from './../widgets/Article';\nimport {\n\tgetArticle,\n\tdeleteCommentProcess,\n\taddCommentProcess,\n\tnewCommentInputProcess\n} from './../processes/articleProcesses';\n\nfunction getProperties(store: Store<any>, properties: any) {\n\tconst { get, path } = store;\n\tconst articleSlug = get(path('article', 'article', 'slug'));\n\tconst isLoading = get(path('article', 'loading'));\n\n\tif (properties.slug !== articleSlug && !isLoading) {\n\t\tgetArticle(store)(properties.slug);\n\t}\n\n\treturn {\n\t\tarticle: get(path('article', 'article')),\n\t\tcomments: get(path('article', 'comments')),\n\t\tnewComment: get(path('article', 'newComment')),\n\t\tloaded: get(path('article', 'loaded')),\n\t\tisAuthenticated: get(path('session', 'isAuthenticated')),\n\t\tloggedInUser: get(path('session', 'username')),\n\t\tdeleteComment: deleteCommentProcess(store),\n\t\taddComment: addCommentProcess(store),\n\t\tonNewCommentInput: newCommentInputProcess(store)\n\t};\n}\n\nexport const ArticleContainer = Container(Article, 'state', { getProperties });\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader?{\"tsConfigFile\":\"/Users/Anthony/development/test-beds/dojo2-realworld/tslint.json\",\"emitErrors\":true,\"failOnHint\":true}!./~/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_dojo!./src/containers/ArticleContainer.ts","import { WidgetBase } from '@dojo/widget-core/WidgetBase';\nimport { v, w } from '@dojo/widget-core/d';\nimport { Link } from '@dojo/routing/Link';\nimport * as marked from 'marked';\n\nimport { Comment } from './Comment';\n\nexport interface ArticleProperties {\n\tarticle?: any;\n\tcomments: any;\n\tloaded?: boolean;\n\tisAuthenticated: boolean;\n\tloggedInUser: string;\n\taddComment: any;\n\tdeleteComment: any;\n\tonNewCommentInput: any;\n\tnewComment: string;\n}\n\nexport class Article extends WidgetBase<ArticleProperties> {\n\tprivate _addComment(event: any) {\n\t\tevent.preventDefault();\n\t\tthis.properties.addComment(this.properties.article.slug, this.properties.newComment);\n\t}\n\n\tprivate _onNewCommentInput(event: any) {\n\t\tthis.properties.onNewCommentInput(event.target.value);\n\t}\n\n\tprotected render() {\n\t\tconst {\n\t\t\tisAuthenticated,\n\t\t\tnewComment,\n\t\t\tdeleteComment,\n\t\t\tloaded = false,\n\t\t\tcomments,\n\t\t\tloggedInUser,\n\t\t\tarticle,\n\t\t\tarticle: { title, author = {}, createdAt }\n\t\t} = this.properties;\n\n\t\tif (!loaded) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn v('div', { classes: 'article-page' }, [\n\t\t\tv('div', { classes: 'banner' }, [\n\t\t\t\tv('div', { classes: 'container' }, [\n\t\t\t\t\tv('h1', [title]),\n\t\t\t\t\tv('div', { classes: 'article-meta' }, [\n\t\t\t\t\t\tw(Link, { to: 'user', params: { id: author.username } }, [v('img', { src: author.image })]),\n\t\t\t\t\t\tv('div', { classes: 'info' }, [\n\t\t\t\t\t\t\tw(Link, { to: 'user', classes: 'author', params: { id: author.username } }, [\n\t\t\t\t\t\t\t\tauthor.username\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tv('span', { classes: 'date' }, [new Date(createdAt).toDateString()])\n\t\t\t\t\t\t]),\n\t\t\t\t\t\tisAuthenticated\n\t\t\t\t\t\t\t? v(\n\t\t\t\t\t\t\t\t\t'button',\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tclasses: [\n\t\t\t\t\t\t\t\t\t\t\t'btn',\n\t\t\t\t\t\t\t\t\t\t\t'btn-sm',\n\t\t\t\t\t\t\t\t\t\t\tauthor.following ? 'btn-secondary' : 'btn-outline-secondary'\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tv('i', { classes: 'ion-plus-round' }),\n\t\t\t\t\t\t\t\t\t\t`${author.following ? ' Unfollow' : ' Follow'} ${author.username}`\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\tisAuthenticated\n\t\t\t\t\t\t\t? v(\n\t\t\t\t\t\t\t\t\t'button',\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tclasses: [\n\t\t\t\t\t\t\t\t\t\t\t'btn',\n\t\t\t\t\t\t\t\t\t\t\t'btn-sm',\n\t\t\t\t\t\t\t\t\t\t\tarticle.favorited ? 'btn-primary' : 'btn-outline-primary'\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tv('i', { classes: 'ion-heart' }),\n\t\t\t\t\t\t\t\t\t\t`${article.favorited ? ' Unfavorite' : ' Favorite'}`,\n\t\t\t\t\t\t\t\t\t\tv('span', { classes: 'counter' }, [`(${article.favoritesCount})`])\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t])\n\t\t\t\t])\n\t\t\t]),\n\t\t\tv('div', { classes: ['container', 'page'] }, [\n\t\t\t\tv('div', { classes: ['row', 'article-content'] }, [\n\t\t\t\t\tv('div', { classes: 'col-xs-12' }, [\n\t\t\t\t\t\tv('div', { innerHTML: marked(article.body, { sanitize: true }) }),\n\t\t\t\t\t\tv(\n\t\t\t\t\t\t\t'ul',\n\t\t\t\t\t\t\t{ classes: 'tag-list' },\n\t\t\t\t\t\t\tarticle.tagList.map((tag: string) => {\n\t\t\t\t\t\t\t\treturn v('li', { classes: ['tag-default', 'tag-pill', 'tag-outline'] }, [tag]);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t)\n\t\t\t\t\t])\n\t\t\t\t]),\n\t\t\t\tv('hr'),\n\t\t\t\tv('div', { classes: 'article-actions' }, [\n\t\t\t\t\tv('div', { classes: 'article-meta' }, [\n\t\t\t\t\t\tv('a', { href: '' }, [v('img', { src: author.image })]),\n\t\t\t\t\t\tv('div', { classes: 'info' }, [\n\t\t\t\t\t\t\tv('a', { href: '', classes: 'author' }, [author.username]),\n\t\t\t\t\t\t\tv('span', { classes: 'date' }, [new Date(createdAt).toDateString()])\n\t\t\t\t\t\t]),\n\t\t\t\t\t\tisAuthenticated\n\t\t\t\t\t\t\t? v(\n\t\t\t\t\t\t\t\t\t'button',\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tclasses: [\n\t\t\t\t\t\t\t\t\t\t\t'btn',\n\t\t\t\t\t\t\t\t\t\t\t'btn-sm',\n\t\t\t\t\t\t\t\t\t\t\tauthor.following ? 'btn-secondary' : 'btn-outline-secondary'\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tv('i', { classes: 'ion-plus-round' }),\n\t\t\t\t\t\t\t\t\t\t`${author.following ? ' Unfollow' : ' Follow'} ${author.username}`\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\tisAuthenticated\n\t\t\t\t\t\t\t? v(\n\t\t\t\t\t\t\t\t\t'button',\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tclasses: [\n\t\t\t\t\t\t\t\t\t\t\t'btn',\n\t\t\t\t\t\t\t\t\t\t\t'btn-sm',\n\t\t\t\t\t\t\t\t\t\t\tarticle.favorited ? 'btn-primary' : 'btn-outline-primary'\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tv('i', { classes: 'ion-heart' }),\n\t\t\t\t\t\t\t\t\t\t`${article.favorited ? ' Unfavorite' : ' Favorite'}`,\n\t\t\t\t\t\t\t\t\t\tv('span', { classes: 'counter' }, [`(${article.favoritesCount})`])\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t])\n\t\t\t\t]),\n\t\t\t\tv('div', { classes: 'row' }, [\n\t\t\t\t\tv('div', { classes: ['col-xs-12', 'col-md-8', 'offset-md-2'] }, [\n\t\t\t\t\t\tisAuthenticated\n\t\t\t\t\t\t\t? v('form', { classes: ['card', 'comment-form'] }, [\n\t\t\t\t\t\t\t\t\tv('div', { classes: 'card-block' }, [\n\t\t\t\t\t\t\t\t\t\tv('textarea', {\n\t\t\t\t\t\t\t\t\t\t\tvalue: newComment,\n\t\t\t\t\t\t\t\t\t\t\toninput: this._onNewCommentInput,\n\t\t\t\t\t\t\t\t\t\t\tclasses: 'form-control',\n\t\t\t\t\t\t\t\t\t\t\tplaceholder: 'Write a comment...',\n\t\t\t\t\t\t\t\t\t\t\trows: 3\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\tv('div', { classes: 'card-footer' }, [\n\t\t\t\t\t\t\t\t\t\tv('img', { classes: 'comment-author-img', src: '' }),\n\t\t\t\t\t\t\t\t\t\tv(\n\t\t\t\t\t\t\t\t\t\t\t'button',\n\t\t\t\t\t\t\t\t\t\t\t{ onclick: this._addComment, classes: ['btn', 'btn-sm', 'btn-primary'] },\n\t\t\t\t\t\t\t\t\t\t\t['Post Comment']\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t: v('p', [\n\t\t\t\t\t\t\t\t\tw(Link, { to: 'login' }, ['Sign In']),\n\t\t\t\t\t\t\t\t\t' or ',\n\t\t\t\t\t\t\t\t\tw(Link, { to: 'register' }, ['Sign Up']),\n\t\t\t\t\t\t\t\t\t' to add comments on this article.'\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\tv(\n\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\tcomments.map((comment: any, index: number) => {\n\t\t\t\t\t\t\t\treturn w(Comment, {\n\t\t\t\t\t\t\t\t\tkey: index,\n\t\t\t\t\t\t\t\t\tcomment,\n\t\t\t\t\t\t\t\t\tloggedInUser,\n\t\t\t\t\t\t\t\t\tdeleteComment,\n\t\t\t\t\t\t\t\t\tslug: article.slug\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t)\n\t\t\t\t\t])\n\t\t\t\t])\n\t\t\t])\n\t\t]);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./~/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_dojo!./src/widgets/Article.ts","import { WidgetBase } from '@dojo/widget-core/WidgetBase';\nimport { v, w } from '@dojo/widget-core/d';\nimport { Link } from '@dojo/routing/Link';\n\ninterface CommentProperties {\n\tcomment: any;\n\tloggedInUser: string;\n\tdeleteComment: any;\n\tslug: string;\n}\n\nexport class Comment extends WidgetBase<CommentProperties> {\n\tprivate _deleteComment() {\n\t\tthis.properties.deleteComment(this.properties.slug, this.properties.comment.id);\n\t}\n\n\tprotected render() {\n\t\tconst { comment, loggedInUser } = this.properties;\n\t\treturn v('div', { classes: 'card' }, [\n\t\t\tv('div', { classes: 'card-block' }, [v('p', { classes: 'card-text' }, [comment.body])]),\n\t\t\tv('div', { classes: 'card-footer' }, [\n\t\t\t\tw(Link, { to: 'user', classes: 'comment-author', params: { id: comment.author.username } }, [\n\t\t\t\t\tv('img', { src: comment.author.image, classes: 'comment-author-img' })\n\t\t\t\t]),\n\t\t\t\tw(Link, { to: 'user', classes: 'comment-author', params: { id: comment.author.username } }, [\n\t\t\t\t\t` ${comment.author.username}`\n\t\t\t\t]),\n\t\t\t\tv('div', { classes: 'date-posted' }, [new Date(comment.createdAt).toDateString()]),\n\t\t\t\tloggedInUser\n\t\t\t\t\t? v('div', { classes: 'mod-options' }, [\n\t\t\t\t\t\t\tv('i', { classes: 'ion-trash-a', onclick: this._deleteComment })\n\t\t\t\t\t\t])\n\t\t\t\t\t: null\n\t\t\t])\n\t\t]);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./~/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_dojo!./src/widgets/Comment.ts","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n;(function() {\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n  table: noop,\n  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n  text: /^[^\\n]+/\n};\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = replace(block.item, 'gm')\n  (/bull/g, block.bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block.bullet)\n  ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n  ('def', '\\\\n+(?=' + block.def.source + ')')\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('blockquote', block.blockquote)\n  ('tag', '<' + block._tag)\n  ('def', block.def)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\s*\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top, bq) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top, true);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false, bq);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.links[cap[1].toLowerCase()] = {\n        href: cap[2],\n        title: cap[3]\n      };\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)([\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n};\n\ninline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|')\n    ()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer;\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(\n          cap[1].charAt(6) === ':'\n          ? this.mangle(cap[1].substring(7))\n          : this.mangle(cap[1])\n        );\n        href = this.mangle('mailto:') + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      src = src.substring(cap[0].length);\n      text = escape(cap[1]);\n      href = text;\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href)\n    , title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return '';\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return '';\n    }\n  }\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer;\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options, renderer) {\n  var parser = new Parser(options, renderer);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options, this.renderer);\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        this.token.text);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = ''\n        , body = ''\n        , i\n        , row\n        , cell\n        , flags\n        , j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        flags = { header: true, align: this.token.align[i] };\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      var body = ''\n        , ordered = this.token.ordered;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered);\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n\t// explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = base.replace(/[^/]*$/, '');\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[^]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[^]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nbaseUrls = {};\noriginIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occured:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer,\n  xhtml: false,\n  baseUrl: null\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  this.marked = marked;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/marked/lib/marked.js\n// module id = 98\n// module chunks = 0"],"sourceRoot":""}